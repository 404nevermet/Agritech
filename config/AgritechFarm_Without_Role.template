{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS Cloud Formation for Agritech Farm Water Management-Team 02",
    "Parameters": {
		"ThingType1":{
			"Type":"String",
			"Default":"SoilMoistureSensor"
		},
		"ThingType2":{
			"Type":"String",
			"Default":"SoilSprinkler"
		},
        "TelemetryDataTableName": {
            "Type": "String",
            "Default": "telemetry_data_table"
        },
		"DeviceMetaDataTableName": {
            "Type": "String",
            "Default": "device_meta_data_table"
        },
		"AggregateDataTableName": {
            "Type": "String",
            "Default": "aggregate_data_table"
        },
        "TelemetryStreamName": {
            "Type": "String",
            "Default": "telemetry_data_stream"
        },
		"DeviceMetaDataStreamName": {
            "Type": "String",
            "Default": "device_metadata_data_stream"
        },
        "TelemetryDataProcessAndStorageRoleName": {
            "Type": "String",
            "Default": "TelemetryDataProcessAndStorageRole3"
        },
		"DeviceMetaDataStorageRoleName": {
            "Type": "String",
            "Default": "DeviceMetaDataStorageRole3"
        },
		"TelemetryDataProcessorServiceRoleName": {
            "Type": "String",
            "Default": "TelemetryDataProcessorServiceRole3"
        },
		"SensorRegisterDataRuleName": {
            "Type": "String",
            "Default": "SensorRegisterDataRule"
        },
		"SensorRegisterResponseDataRuleName": {
            "Type": "String",
            "Default": "SensorRegisterResponseDataRule"
        },
		"SensorTelemetryDataRuleName": {
            "Type": "String",
            "Default": "SensorTelemetryDataRule"
        },
		"SprinklerRegisterDataRuleName": {
            "Type": "String",
            "Default": "SprinklerRegisterDataRuleName"
        },
		"SprinklerRegisterResponseDataRuleName": {
            "Type": "String",
            "Default": "SprinklerRegisterResponseDataRule"
        },
		"SprinklerSetStateDataRuleName": {
            "Type": "String",
            "Default": "SprinklerSetStateDataRule"
        },
		"SprinklerSetStateResponseDataRuleName": {
            "Type": "String",
            "Default": "SprinklerSetStateResponseDataRule"
        }
    },
    "Resources": {
		"SMThing1":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-000"
			}
		},
		"SMThing2":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-001"
			}
		},
		"SMThing3":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-002"
			}
		},
		"SMThing4":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-003"
			}
		},
		"SMThing5":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-004"
			}
		},
		"SMThing6":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-005"
			}
		},
		"SMThing7":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-006"
			}
		},
		"SMThing8":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-007"
			}
		},
		"SMThing9":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-008"
			}
		},
		"SMThing10":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SMS-009"
			}
		},
        "SPThing1":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SLR-000"
			}
		},
        "SPThing2":{
			"Type":"AWS::IoT::Thing",
			"Properties":{
				"ThingName":"SLR-001"
			}
		},
        "TelemetryDataDB": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "TelemetryDataTableName"
                },
                "AttributeDefinitions": [{
                        "AttributeName": "deviceId",
                        "AttributeType": "S"
                    },
					{
                        "AttributeName": "timestamp",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [{
                        "AttributeName": "deviceId",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "timestamp",
                        "KeyType": "RANGE"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 5,
                    "WriteCapacityUnits": 5
                },
                "Tags": [{
                    "Key": "name",
                    "Value": "TelemetryDataDB"
                }]
            }
        },
		"DeviceMetaDataDB": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Ref": "DeviceMetaDataTableName"
                },
                "AttributeDefinitions": [{
                        "AttributeName": "deviceId",
                        "AttributeType": "S"
                    },
					{
                        "AttributeName": "timestamp",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [{
                        "AttributeName": "deviceId",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "timestamp",
                        "KeyType": "RANGE"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 5,
                    "WriteCapacityUnits": 5
                },
                "Tags": [{
                    "Key": "name",
                    "Value": "DeviceMetaDataDB"
                }]
            }
        },
        "TelemetryDataStream": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
                "Name": {
                    "Ref": "TelemetryStreamName"
                },
                "ShardCount": 1,
                "Tags": [{
                    "Key": "Name",
                    "Value": "TelemetryDataStream"
                }]
            }
        },
		"DeviceMetaDataStream": {
            "Type": "AWS::Kinesis::Stream",
            "Properties": {
                "Name": {
                    "Ref": "DeviceMetaDataStreamName"
                },
                "ShardCount": 1,
                "Tags": [{
                    "Key": "Name",
                    "Value": "TelemetryDataStream"
                }]
            }
        },
		"SensorRegisterDataRule": {
			"Type": "AWS::IoT::TopicRule",
			"Properties": {
				"RuleName": {
					"Ref": "SensorRegisterDataRuleName"
				},
				"TopicRulePayload": {
					"Sql": "SELECT * FROM 'sensor/request/register'",
					"RuleDisabled": false,
					"Actions": [
					{
						"DynamoDBv2": {
							"PutItem" : {
								"TableName" : {"Ref": "DeviceMetaDataTableName"}
							},
							"RoleArn" : "arn:aws:iam::174800403475:role/service-role/DeviceMetaDataStorageRole3"
						}
					}
				] 
				}
			}
		},
		"SensorTelemetryDataRule": {
			"Type": "AWS::IoT::TopicRule",
			"Properties": {
				"RuleName": {
					"Ref": "SensorTelemetryDataRuleName"
				},
				"TopicRulePayload": {
					"Sql": "SELECT * FROM 'sensor/data/telemetry'",
					"RuleDisabled": false, 
					"Actions": [
					{
						"Kinesis": {
						"StreamName": "TelemetryDataStream", 
						"PartitionKey": "${topic()}",
						"RoleArn":  "arn:aws:iam::174800403475:role/service-role/TelemetryDataProcessAndStorageRole3" 
						}
					},
					{
						"DynamoDBv2": {
							"PutItem" : {
								"TableName" : {"Ref": "TelemetryDataTableName"}
							},
							"RoleArn" : "arn:aws:iam::174800403475:role/service-role/TelemetryDataProcessAndStorageRole3"
						}
						
					}
				] 
					
				}
			}
		},
		"SprinklerRegisterDataRule": {
			"Type": "AWS::IoT::TopicRule",
			"Properties": {
				"RuleName": {
					"Ref": "SprinklerRegisterDataRuleName"
				},
				"TopicRulePayload": {
					"Sql": "SELECT * FROM 'actuator/request/register'",
					"RuleDisabled": false, 
					"Actions": [
					{
						"DynamoDBv2": {
							"PutItem" : {
								"TableName" : {"Ref": "DeviceMetaDataTableName"}
							},
							"RoleArn" : "arn:aws:iam::174800403475:role/service-role/DeviceMetaDataStorageRole3"
						}
					}
				]
					
				}
			}
		},
		"SprinklerSetStateDataRule": {
			"Type": "AWS::IoT::TopicRule",
			"Properties": {
				"RuleName": {
					"Ref": "SprinklerSetStateDataRuleName"
				},
				"TopicRulePayload": {
					"Sql": "SELECT * FROM 'actuator/command/set-state/zoneId'",
					"RuleDisabled": false, 
					"Actions": [
					{
						"DynamoDBv2": {
							"PutItem" : {
								"TableName" : {"Ref": "DeviceMetaDataTableName"}
							},
							"RoleArn" : "arn:aws:iam::174800403475:role/service-role/DeviceMetaDataStorageRole3"
						}
					}
				]
					
				}
			}
		},
        "TelemetryDataProcessor": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "FunctionName": "TelemetryDataProcessor",
                "Role":  "arn:aws:iam::174800403475:role/service-role/TelemetryDataProcessorServiceRole3" ,
                "Runtime": "python3.8",
                "Handler": "index.lambda_handler",
                "Code": {
                    "ZipFile": {
                        "Fn::Join": [
                            "\n", [
                                "    return 1"
                            ]
                        ]
                    }
                },
                "Tags": [{
                    "Key": "name",
                    "Value": "TelemetryDataProcessor"
                }]
            }
        },
        "EventSourceMapping": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "EventSourceArn": {
                    "Fn::Join": [
                        "", [
                            "arn:aws:kinesis:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":stream/",
                            {
                                "Ref": "TelemetryStreamName"
                            }
                        ]
                    ]
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "TelemetryDataProcessor",
                        "Arn"
                    ]
                },
                "BatchSize": 5,
                "StartingPosition": "TRIM_HORIZON"
            }
        }
    }
}